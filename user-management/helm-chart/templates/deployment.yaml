apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-management
  template:
    metadata:
      labels:
        app: user-management
    spec:
      serviceAccountName: microservice-sqs
      containers:
        - name: user-management
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
          env:
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: DB_NAME
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: DB_PORT
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: SECRET_KEY
            - name: ALGORITHM
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: ALGORITHM
            - name: ACCESS_TOKEN_EXPIRE_MINUTES
              valueFrom:
                secretKeyRef:
                  name: user-management-env
                  key: ACCESS_TOKEN_EXPIRE_MINUTES
